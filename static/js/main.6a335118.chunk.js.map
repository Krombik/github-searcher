{"version":3,"sources":["utils/makeTheme.ts","components/common/GlobalStyle.tsx","redux/alert/type.ts","utils/useQueryParams.ts","components/common/Gutter.tsx","utils/useDebounce.ts","containers/common/FilterInput.tsx","utils/fetcher.ts","utils/constant.ts","redux/alert/actions.ts","api/apiAddresses.ts","components/common/Spinner.tsx","containers/common/Loader.tsx","containers/home/Users.tsx","redux/common/type.ts","containers/home/UsersContainer.tsx","pages/Home.tsx","components/user/UserInfo.tsx","containers/user/Repos.tsx","containers/user/ReposContainer.tsx","containers/user/UserContainer.tsx","pages/User.tsx","router/AppRouter.tsx","containers/common/Alert.tsx","redux/common/actions.ts","containers/header/ThemeSwitcher.tsx","containers/header/OffsetSelect.tsx","containers/header/SettingsDial.tsx","components/common/Header.tsx","components/common/Layout.tsx","containers/common/App.tsx","redux/common/reducer.ts","redux/alert/reducer.ts","redux/reducer.ts","redux/store.ts","index.tsx"],"names":["headerHeight","makeTheme","dark","responsiveFontSizes","createMuiTheme","palette","type","secondary","main","primary","typography","fontFamily","h5","fontWeight","h2","h1","overrides","MuiContainer","root","display","undefined","width","marginLeft","marginRight","MuiAppBar","flexDirection","justifyContent","height","MuiTableCell","head","MuiButton","MuiTabs","scroller","ActionTypes","GlobalStyle","createGlobalStyle","useQueryParams","search","useLocation","useMemo","parse","parseNumbers","Gutter","children","maxWidth","justify","direction","wrap","alignItems","props","Grid","item","container","xs","spacing","component","Container","disableGutters","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","prevValue","useRef","useEffect","handler","setTimeout","current","clearTimeout","FilterInput","label","queryKey","queryParams","useHistory","replace","push","listen","String","filter","setFilter","handleFilter","useCallback","e","target","debouncedFilter","prevFilter","resetDebouncedFilter","startsWith","stringify","location","action","TextField","fullWidth","onChange","axiosInstance","axios","create","baseURL","fetcher","get","url","headers","Accept","data","response","status","APIPaths","setAlert","show","dispatch","payload","message","text","SET_ALERT","Spinner","CircularProgress","Loader","useDispatch","Component","Users","items","map","index","Link","to","login","color","underline","src","avatar_url","selectData","createSelector","state","common","offset","UsersContainer","useSelector","prevData","useSWRInfinite","page","stringifyUrl","USER_SEARCH","query","q","per_page","skipEmptyString","size","setSize","users","length","Button","variant","disabled","total_count","onClick","Home","memo","UserInfo","Typography","email","href","Date","created_at","toDateString","followers","following","bio","Repos","html_url","name","forks","Tooltip","title","stargazers_count","ReposContainer","username","USER_REPOSITORIES_SEARCH","repos","UserContainer","User","user","match","params","useSWR","USERS","AppRouter","exact","path","alert","Alert","handleClose","Snackbar","open","autoHideDuration","onClose","elevation","severity","ThemeSwitcher","Switch","checked","isDark","SET_DARK","offsetVariants","OffsetSelect","FormControl","Select","count","SET_OFFSET","setOffset","MenuItem","theme","shape","borderRadius","SettingsDial","setOpen","handleOpen","ariaLabel","icon","IconButton","onOpen","SpeedDialAction","tooltipTitle","breakpoints","Header","position","Layout","App","StylesProvider","injectFirst","CssBaseline","initialState","middleware","commonConfig","key","storage","whitelist","combinedReducer","combineReducers","persistReducer","store","createStore","thunkMiddleware","compose","applyMiddleware","persistor","persistStore","render","loading","document","getElementById"],"mappings":"4NAEMA,EAAe,OA6DNC,EA3DG,SAACC,GAAD,OAChBC,YACEC,YAAe,CACbC,QAAS,CACPC,KAAMJ,EAAO,OAAS,QACtBK,UAAW,CAAEC,KAAMN,EAAO,UAAY,WACtCO,QAAS,CAAED,KAAM,YAEnBE,WAAY,CACVC,WAAY,WACZC,GAAI,CACFC,WAAY,QAEdC,GAAI,CACFD,WAAY,QAEdE,GAAI,CACFF,WAAY,SAGhBG,UAAW,CACTC,aAAc,CACZC,KAAM,CACJC,aAASC,EACTC,WAAOD,EACPE,gBAAYF,EACZG,iBAAaH,IAGjBI,UAAW,CACTN,KAAM,CACJO,mBAAeL,EACfM,eAAgB,SAChBC,OAAQ3B,IAGZ4B,aAAc,CACZC,KAAM,CACJhB,WAAY,MAGhBiB,UAAW,CACTZ,KAAM,CACJL,WAAY,MAGhBkB,QAAS,CACPb,KAAM,CACJS,OAAQ3B,GAEVgC,SAAU,CACRL,OAAQ,OACRR,QAAS,qB,8bCtDrB,ICFYc,EDyBGC,EAvBKC,YAAH,K,gBEUFC,EARQ,WAEf,IACEC,EAAWC,cAAXD,OAER,OADeE,mBAAQ,kBAAMC,gBAAMH,EAAQ,CAAEI,cAAc,MAAS,CAACJ,K,kCC0BxDK,EA5BA,gBACbC,EADa,EACbA,SADa,IAEbC,gBAFa,MAEF,KAFE,EAGbC,EAHa,EAGbA,QACAC,EAJa,EAIbA,UACAC,EALa,EAKbA,KACAC,EANa,EAMbA,WACGC,EAPU,wFAUb,cAACC,EAAA,EAAD,2BAAUD,GAAV,IAAiBE,MAAI,EAACC,WAAS,EAACP,QAAQ,SAASQ,GAAI,GAArD,SACE,cAACH,EAAA,EAAD,CACEC,MAAI,EACJC,WAAS,EACTE,QAhBuB,EAiBvBC,UAAWC,IACXC,gBAAc,EACdb,SAAUA,EACVC,QAASA,EACTC,UAAWA,EACXC,KAAMA,EACNC,WAAYA,EAVd,SAYGL,Q,yBCAQe,EA3BK,SAClBC,EACAC,GAKI,IAAD,EACyCC,mBAASF,GADlD,mBACIG,EADJ,KACoBC,EADpB,KAEGC,EAAYC,iBAAOH,GAezB,OAbAI,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACrBN,IAAmBH,IACrBK,EAAUK,QAAUP,EACpBC,EAAkBJ,MAEnBC,GAEH,OAAO,WACLU,aAAaH,MAEd,CAACR,EAAOC,IAEJ,CAACE,EAAgBE,EAAUK,QAASN,ICsC9BQ,EA9CiB,SAAC,GAAyB,IAAD,EAAtBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClCC,EAActC,IADmC,EAGrBuC,cAA1BC,EAH+C,EAG/CA,QAASC,EAHsC,EAGtCA,KAAMC,EAHgC,EAGhCA,OAHgC,EAK3BjB,mBAASkB,OAAM,UAACL,EAAYD,UAAb,QAA0B,KALd,mBAKhDO,EALgD,KAKxCC,EALwC,KAOjDC,EAAeC,uBACnB,SAACC,GAAD,OAAsCH,EAAUG,EAAEC,OAAO1B,SACzD,IATqD,EAYKD,EAC1DsB,EACA,KAdqD,mBAYhDM,EAZgD,KAY/BC,EAZ+B,KAYnBC,EAZmB,KAyCvD,OAxBAtB,qBAAU,YACOoB,EAAgBG,WAAWF,GAAcX,EAAUC,GAE3D,CACLxC,OAAQqD,oBAAU,2BACbhB,GADY,kBAEdD,EAAWa,QAAmBlE,SAGlC,CAACkE,EAAiBb,IAErBP,qBACE,kBACEY,GAAO,SAACa,EAAUC,GAChB,GAAe,QAAXA,EAAkB,CAAC,IAAD,EACdjC,EAAK,UAAInB,gBAAMmD,EAAStD,QAAQoC,UAA3B,QAAmD,GAE9De,EAAqB7B,GACrBsB,EAAUtB,SAGhB,CAACc,IAID,cAACoB,EAAA,EAAD,CAAWC,WAAS,EAACC,SAAUb,EAAcV,MAAOA,EAAOb,MAAOqB,K,mCCxDhEgB,E,OAAgBC,EAAMC,OAAO,CACjCC,QCLsB,2BDyBTC,EAjBC,CACRC,IADQ,SACIC,GAAmC,OAAD,uIAGxCN,EAAcK,IAAIC,EAAK,CAC3BC,QAAS,CACPC,OAAQ,oCALkC,uCAQ9CC,MAR8C,yCAUvB,KAAMC,SAAvBD,EAVwC,EAUxCA,KAAME,EAVkC,EAUlCA,OAVkC,6CAWpCF,GAXoC,IAW9BE,YAX8B,6D,kBLT1C1E,K,uBAAAA,M,KOIL,ICJF2E,EDIQC,EAAW,SACtBC,EACAL,GAFsB,OAGN,SAACM,GACjB,IAAIC,EACJ,GAAIF,GAAQL,EAAM,CAAC,IACTE,EAAoBF,EAApBE,OAAQM,EAAYR,EAAZQ,QAEhBD,EAAU,CACRF,OACAI,KACED,GAAsB,MAAXN,EACP,eACW,MAAXA,EACA,gBACW,MAAXA,EACA,YACW,MAAXA,EACA,wBACA,8BAGRK,EAAU,CAAEF,QAGdC,EAAS,CACPzG,KAAM2B,EAAYkF,UAClBH,c,SErBWI,EANM,kBACnB,cAAClE,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACP,QAAQ,SAA7B,SACE,cAACwE,EAAA,EAAD,OC+BWC,EAxBA,YAO6B,IAN1C/D,EAMyC,EANzCA,UACAkD,EAKyC,EALzCA,KACGxD,EAIsC,oCACnC8D,EAAWQ,cAOjB,GALArD,qBAAU,YACR,OAAKuC,QAAL,IAAKA,OAAL,EAAKA,EAAuCE,SAC1CI,EAASF,GAAS,EAAMJ,MACzB,CAACA,EAAMM,KAELN,EAAM,OAAO,cAAC,EAAD,IAElB,GAAKA,EAA0BE,OAAQ,OAAO,KAE9C,IAAMa,EAAYjE,EAElB,OAAO,cAACiE,EAAD,aAAWf,KAAMA,GAAexD,K,kJCmB1BwE,EAzCW,SAAC,GAAc,IAAZhB,EAAW,EAAXA,KAC3B,OACE,mCACGA,EAAKiB,MAAMC,KAAI,SAACxE,EAAMyE,GAAP,OACd,cAAC1E,EAAA,EAAD,CAAMC,MAAI,EAAaE,GAAI,GAA3B,SACE,eAACH,EAAA,EAAD,CAAME,WAAS,EAACE,QAAS,EAAGN,WAAW,SAAvC,UACE,cAACE,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAAC,IAAD,CACEI,UAAWsE,IACXC,GAAE,WAAM3E,EAAK4E,OACbC,MAAM,UACNC,UAAU,OAJZ,SAME,iBACEC,IAAK/E,EAAKgF,WADZ,SAOGhF,EAAK4E,YAIZ,cAAC7E,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAAC,IAAD,CACEI,UAAWsE,IACXC,GAAE,WAAM3E,EAAK4E,OACbC,MAAM,UACNC,UAAU,SAJZ,SAMG9E,EAAK4E,cA3BEH,U,SHhBnBhB,K,2BAAAA,E,cAAAA,E,gDAAAA,M,KAMUA,IINH3E,EJMG2E,I,SKSTwB,EAAaC,aACjB,SAACC,GAAD,OAAkBA,EAAMC,OAAOC,UAC/B,SAACA,GAAD,MAAa,CAAEA,aAqDFC,GAhDoB,SAAC,GAAgB,IAAD,EAAbpG,EAAa,EAAbA,OAC5BmG,EAAWE,YAAYN,GAAvBI,OAEFG,EAAW1E,mBAHgC,EAKjB2E,aAC9B,SAACC,GAAD,OACEC,uBACE,CACExC,IAAKM,EAASmC,YACdC,MAAO,CAAEC,EAAG5G,EAAQwG,OAAMK,SAAUV,IAEtC,CAAEW,iBAAiB,MAEvB/C,EAAQC,KATFI,EALyC,EAKzCA,KAAM2C,EALmC,EAKnCA,KAAMC,EAL6B,EAK7BA,QAYpBnF,qBAAU,WACJuC,IAAMkC,EAAStE,QAAUoC,KAC5B,CAACA,IAEJ,IAAM6C,EAAQ7C,GAAQkC,EAAStE,QAE/B,OACE,4CACGiF,QADH,IACGA,OADH,EACGA,EAAO3B,KAAI,SAACxE,EAAMyE,GAAP,OACV,cAAC,EAAD,CAAoBrE,UAAWkE,EAAOhB,KAAMtD,GAA/ByE,MAEd0B,GAASA,EAAMC,OAASH,GAAQ,cAAC,EAAD,IAChC3C,GACC,cAACvD,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACP,QAAQ,SAA7B,SACE,cAAC2G,EAAA,EAAD,CACEC,QAAQ,YACRzB,MAAM,UACN0B,SACEjD,EAAK8C,SAAWH,GAChB3C,EAAK8C,OAASf,GAAd,UAAwB/B,EAAK,GAAGkD,mBAAhC,QAA+C,GAEjDC,QAAS,kBAAMP,GAAQ,SAACD,GAAD,OAAUA,EAAO,MAP1C,6BC9BKS,GAfGC,gBAAK,WAAO,IACpBzH,EAAWD,IAAXC,OAER,OACE,cAAC,EAAD,UACE,eAACa,EAAA,EAAD,CAAME,WAAS,EAACE,QAAS,EAAzB,UACE,cAACJ,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAf,SACE,cAAC,EAAD,CAAaoB,SAAS,SAASD,MAAM,aAEtCnC,GAAU,cAAC,GAAD,CAAgBA,OAAQA,Y,wICmD5B0H,GA1Dc,SAAC,GAAD,IAAGtD,EAAH,EAAGA,KAAH,OAC3B,qCACE,eAACvD,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACE,QAAS,EAAGN,WAAW,SAA5C,UACE,cAACE,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,kBACE+E,IAAKzB,EAAK0B,WADZ,SAOG1B,EAAKsB,UAGV,cAAC7E,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,eAACD,EAAA,EAAD,CAAME,WAAS,EAACE,QAAS,EAAGR,UAAU,SAAtC,UACE,cAACI,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,eAAC6G,GAAA,EAAD,wBAAuBvD,EAAKsB,WAE9B,cAAC7E,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,eAAC6G,GAAA,EAAD,oBACS,IACNvD,EAAKwD,OACJ,cAACpC,EAAA,EAAD,CACEI,UAAU,SACVD,MAAM,UACNkC,KAAI,iBAAYzD,EAAKwD,OAHvB,SAKGxD,EAAKwD,aAKd,cAAC/G,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,eAAC6G,GAAA,EAAD,wBAAuBvD,EAAKd,cAE9B,cAACzC,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,eAAC6G,GAAA,EAAD,yBACc,IAAIG,KAAK1D,EAAK2D,YAAYC,oBAG1C,cAACnH,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,eAAC6G,GAAA,EAAD,WAAavD,EAAK6D,UAAlB,kBAEF,cAACpH,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,eAAC6G,GAAA,EAAD,wBAAuBvD,EAAK8D,uBAKnC9D,EAAK+D,KACJ,cAACtH,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAf,SACE,cAAC2G,GAAA,EAAD,UAAavD,EAAK+D,Y,oDCOXC,GAxDW,SAAC,GAAc,IAAZhE,EAAW,EAAXA,KAC3B,OACE,mCACGA,EAAKiB,MAAMC,KAAI,SAACxE,EAAMyE,GAAP,OACd,cAAC1E,EAAA,EAAD,CAAMC,MAAI,EAAaE,GAAI,GAA3B,SACE,eAACH,EAAA,EAAD,CACEE,WAAS,EACTE,QAAS,EACTN,WAAW,SACXH,QAAQ,gBAJV,UAME,cAACK,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAAC0E,EAAA,EAAD,CACEqC,KAAM/G,EAAKuH,SACX1C,MAAM,UACNC,UAAU,SACV5C,OAAO,SAJT,SAMGlC,EAAKwH,SAGV,cAACzH,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,eAACD,EAAA,EAAD,CAAME,WAAS,EAACE,QAAS,EAAGT,QAAQ,WAApC,UACE,eAACK,EAAA,EAAD,CACEC,MAAI,EACJC,WAAS,EACTJ,WAAW,SACXM,QAAS,EACTT,QAAQ,WALV,UAOE,cAACK,EAAA,EAAD,CAAMC,MAAI,EAAV,SAAYA,EAAKyH,QACjB,cAACC,GAAA,EAAD,CAASC,MAAM,QAAf,SACE,cAAC,KAAD,SAGJ,eAAC5H,EAAA,EAAD,CACEC,MAAI,EACJC,WAAS,EACTJ,WAAW,SACXM,QAAS,EACTT,QAAQ,WALV,UAOE,cAACK,EAAA,EAAD,CAAMC,MAAI,EAAV,SAAYA,EAAK4H,mBACjB,cAACF,GAAA,EAAD,CAASC,MAAM,QAAf,SACE,cAAC,KAAD,kBAxCIlD,SCAlBQ,GAAaC,aACjB,SAACC,GAAD,OAAkBA,EAAMC,OAAOC,UAC/B,SAACA,GAAD,MAAa,CAAEA,aA2DFwC,GAtDoB,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SAC5BzC,EAAWE,YAAYN,IAAvBI,OAEFG,EAAW1E,mBAET5B,EAAWD,IAAXC,OAL2C,EAOnBuG,aAC9B,SAACC,GAAD,OACEC,uBACE,CACExC,IAAKM,EAASsE,yBACdlC,MAAO,CACLC,EAAE,GAAD,OAAK5G,EAAM,UAAMA,EAAN,aAA0B,GAArC,gBAA+C4I,GAChDpC,OACAK,SAAUV,IAGd,CAAEW,iBAAiB,MAEvB/C,EAAQC,KAbFI,EAP2C,EAO3CA,KAAM2C,EAPqC,EAOrCA,KAAMC,EAP+B,EAO/BA,QAgBpBnF,qBAAU,WACJuC,IAAMkC,EAAStE,QAAUoC,KAC5B,CAACA,IAEJ,IAAM0E,EAAQ1E,GAAQkC,EAAStE,QAE/B,OACE,4CACG8G,QADH,IACGA,OADH,EACGA,EAAOxD,KAAI,SAACxE,EAAMyE,GAAP,OACV,cAAC,EAAD,CAAoBrE,UAAWkH,GAAOhE,KAAMtD,GAA/ByE,MAEduD,GAASA,EAAM5B,OAASH,GAAQ,cAAC,EAAD,IAChC3C,GACC,cAACvD,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACP,QAAQ,SAA7B,SACE,cAAC2G,EAAA,EAAD,CACEC,QAAQ,YACRzB,MAAM,UACN0B,SACEjD,EAAK8C,SAAWH,GAChB3C,EAAK8C,OAASf,GAAd,UAAwB/B,EAAK,GAAGkD,mBAAhC,QAA+C,GAEjDC,QAAS,kBAAMP,GAAQ,SAACD,GAAD,OAAUA,EAAO,MAP1C,6BCvCKgC,GAZmB,SAAC,GAAc,IAAZ3E,EAAW,EAAXA,KACnC,OACE,qCACE,cAAC,GAAD,CAAUA,KAAMA,IAChB,cAACvD,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAf,SACE,cAAC,EAAD,CAAaoB,SAAS,SAASD,MAAM,aAEvC,cAAC,GAAD,CAAgByG,SAAUxE,EAAKsB,YCgBtBsD,GArB0CvB,gBACvD,YAIO,IAFOwB,EAER,EAHJC,MACEC,OAAUF,KAGJ7E,EAASgF,YAAM,UAClB7E,EAAS8E,MADS,YACAJ,GACrBlF,EAAQC,KAFFI,KAKR,OACE,cAAC,EAAD,UACE,cAACvD,EAAA,EAAD,CAAME,WAAS,EAACE,QAAS,EAAzB,SACE,cAAC,EAAD,CAAQC,UAAW6H,GAAe3E,KAAMA,WCZnCkF,GATQ,WACrB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAItI,UAAWsG,KACjC,cAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,SAAStI,UAAW8H,S,oBCDtCjD,GAAaC,aACjB,SAACC,GAAD,OAAkBA,EAAMwD,MAAMhF,QAC9B,SAACwB,GAAD,OAAkBA,EAAMwD,MAAM5E,QAC9B,SAACJ,EAAMI,GAAP,MAAiB,CAAEJ,OAAMI,WA0BZ6E,GAvBIjC,gBAAK,WAAO,IAAD,EACLpB,YAAYN,IAA3BtB,EADoB,EACpBA,KAAMI,EADc,EACdA,KAERH,EAAWQ,cAEXyE,EAAc7G,uBAAY,WAC9B4B,EAASF,GAAS,MACjB,CAACE,IAEJ,OACE,cAACkF,GAAA,EAAD,CAAUC,KAAMpF,EAAMqF,iBAAkB,IAAMC,QAASJ,EAAvD,SACE,cAAC,KAAD,CACEK,UAAW,EACX5C,QAAQ,SACR2C,QAASJ,EACTM,SAAU,QAJZ,SAMGpF,S,uET/BGjF,K,oBAAAA,E,yBAAAA,M,KUGL,ICIDmG,GAAaC,aACjB,SAACC,GAAD,OAAkBA,EAAMC,OAAOrI,QAC/B,SAACA,GAAD,MAAW,CAAEA,WAcAqM,GAXY,WACzB,IAAMxF,EAAWQ,cACTrH,EAASwI,YAAYN,IAArBlI,KAMR,OAAO,cAACsM,GAAA,EAAD,CAAQC,QAASvM,EAAM6F,SAJV,WDbC,IAAC2G,ECcpB3F,GDdoB2F,GCcFxM,EDdmC,SAAC6G,GACxDA,EAAS,CACPzG,KAAM2B,EAAY0K,SAClB3F,QAAS0F,QCc0C1E,MAAM,a,8BCVvDI,GAAaC,aACjB,SAACC,GAAD,OAAkBA,EAAMC,OAAOC,UAC/B,SAACA,GAAD,MAAa,CAAEA,aAGXoE,GAAiB,CAAC,GAAI,GAAI,GAAI,KA0BrBC,GAxBW,WACxB,IAAM9F,EAAWQ,cAETiB,EAAWE,YAAYN,IAAvBI,OAQR,OACE,cAACsE,GAAA,EAAD,CAAarD,QAAQ,WAArB,SACE,cAACsD,GAAA,EAAD,CAAQpJ,MAAO6E,EAAQzC,SARuB,SAACX,GACjD,IAAM4H,EAAQ5H,EAAEC,OAAO1B,MAEnB6E,IAAWwE,GAAOjG,EFfD,SAACyB,GAAD,OAAiC,SAACzB,GACzDA,EAAS,CACPzG,KAAM2B,EAAYgL,WAClBjG,QAASwB,KEYsB0E,CAAUF,KAKOxI,MAAM,SAApD,SACGoI,GAAejF,KAAI,SAAChE,EAAOiE,GAAR,OAClB,cAACuF,GAAA,EAAD,CAAUxJ,MAAOA,EAAjB,SACGA,GAD0BiE,W,qkBCoBR,qBAAGwF,MACZC,MAAMC,gBAEK,qBAAGF,MAA8B9J,QAAQ,MAuB3DiK,GApEW,WAAO,IAAD,EACN1J,oBAAS,GADH,mBACvBqI,EADuB,KACjBsB,EADiB,KAGxBC,EAAatI,uBAAY,WAC7BqI,GAAQ,KACP,IAEGxB,EAAc7G,uBAAY,WAC9BqI,GAAQ,KACP,IAEH,OACE,mBAuCEE,UAAU,WACVC,KACE,cAACC,GAAA,EAAD,CAAYrK,UAAU,OAAtB,SACE,cAAC,KAAD,MAGJ6I,QAASJ,EACT6B,OAAQJ,EACRvB,KAAMA,EACNpJ,UAAU,OAhDZ,UAkDE,cAACgL,GAAA,EAAD,CAAiBH,KAAM,cAAC,GAAD,IAAmBI,aAAa,iBACvD,cAACD,GAAA,EAAD,CAAiBH,KAAM,cAAC,GAAD,IAAkBI,aAAa,uB,4HC1DrC,qBAAGX,MACZ9J,QxBZe,GwBYU,K,qHAQlB,qBAAG8J,MACRY,YAAY3M,MAAM,SAqBnB4M,GApCKnE,gBAAK,kBACvB,kBACEoE,SAAS,SACTlG,MAAM,UAFR,SAQE,mBACE5E,WAAS,EACTP,QAAQ,gBACRG,WAAW,SAHb,UASE,cAACE,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAAC,IAAD,CACEI,UAAWsE,IACXC,GAAG,IACHE,MAAM,UACNC,UAAU,OACVwB,QAAQ,KALV,+BAUF,cAACvG,EAAA,EAAD,CAAMC,MAAI,EAAV,SACE,cAAC,GAAD,c,kJCdOgL,GApBI,SAAC,GAAD,IAAGxL,EAAH,EAAGA,SAAH,OACjB,qCACE,mBACES,WAAS,EACTE,QAAS,EAOTR,UAAU,SATZ,UAWE,cAAC,GAAD,IACCH,KAEH,cAAC,GAAD,QCPEyF,GAAaC,aACjB,SAACC,GAAD,OAAkBA,EAAMC,OAAOrI,QAC/B,SAACA,GAAD,MAAW,CAAEA,WAuBAkO,GApBE,WAAO,IACdlO,EAASwI,YAAYN,IAArBlI,KAEFkN,EAAQ7K,mBAAQ,kBAAMtC,EAAUC,KAAO,CAACA,IAE9C,OACE,cAACmO,EAAA,EAAD,CAAgBC,aAAW,EAA3B,SACE,cAAC,IAAD,CAAkBlB,MAAOA,EAAzB,SACE,eAAC,IAAD,CAAeA,MAAOA,EAAtB,UACE,cAAC,EAAD,IACA,cAACmB,EAAA,EAAD,IACA,cAAC,GAAD,UACE,cAAC,GAAD,c,gDCzBNC,GAAsB,CAC1BtO,MAAM,EACNsI,OAAQ,ICFV,IAAMgG,GAAsB,CAC1B1H,MAAM,EACNI,KAAM,ICHR,ICDwBuH,GDClBC,GAAmC,CACvCC,IAAK,SACLC,Q,QAASA,EACTC,UAAW,CAAC,OAAQ,QAAS,WAGlBC,GAAkBC,aAAgB,CAC7CxG,OAAQyG,aAAeN,IFDV,WAGL,IAFRpG,EAEO,uDAFCkG,GACR5I,EACO,uCACP,OAAQA,EAAOtF,MACb,KAAK2B,EAAY0K,SACf,OAAO,2BACFrE,GADL,IAEEpI,KAAM0F,EAAOoB,UAEjB,KAAK/E,EAAYgL,WACf,OAAO,2BACF3E,GADL,IAEEE,OAAQ5C,EAAOoB,UAEnB,QACE,OAAOsB,MEdXwD,MDFa,WAGL,IAFRxD,EAEO,uDAFCkG,GACR5I,EACO,uCACP,OAAQA,EAAOtF,MACb,KAAK2B,EAAYkF,UACf,OAAO,2BACFmB,GACA1C,EAAOoB,SAEd,QACE,OAAOsB,MEVA2G,GAAQC,aACnBJ,IATsBL,GAUPU,KALRC,aAAQC,aAAgBZ,OAQpBa,GAAYC,aAAaN,I,OCTtCO,iBACE,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAaQ,QAAS,KAAMH,UAAWA,GAAvC,SACE,cAAC,IAAD,UACE,cAAC,GAAD,UAINI,SAASC,eAAe,W","file":"static/js/main.6a335118.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\n\r\nconst headerHeight = \"72px\";\r\n\r\nconst makeTheme = (dark: boolean) =>\r\n  responsiveFontSizes(\r\n    createMuiTheme({\r\n      palette: {\r\n        type: dark ? \"dark\" : \"light\",\r\n        secondary: { main: dark ? \"#a50000\" : \"#00468b\" },\r\n        primary: { main: \"#008000\" },\r\n      },\r\n      typography: {\r\n        fontFamily: \"OpenSans\",\r\n        h5: {\r\n          fontWeight: \"bold\",\r\n        },\r\n        h2: {\r\n          fontWeight: \"bold\",\r\n        },\r\n        h1: {\r\n          fontWeight: \"bold\",\r\n        },\r\n      },\r\n      overrides: {\r\n        MuiContainer: {\r\n          root: {\r\n            display: undefined,\r\n            width: undefined,\r\n            marginLeft: undefined,\r\n            marginRight: undefined,\r\n          },\r\n        },\r\n        MuiAppBar: {\r\n          root: {\r\n            flexDirection: undefined,\r\n            justifyContent: \"center\",\r\n            height: headerHeight,\r\n          },\r\n        },\r\n        MuiTableCell: {\r\n          head: {\r\n            fontWeight: 600,\r\n          },\r\n        },\r\n        MuiButton: {\r\n          root: {\r\n            fontWeight: 600,\r\n          },\r\n        },\r\n        MuiTabs: {\r\n          root: {\r\n            height: headerHeight,\r\n          },\r\n          scroller: {\r\n            height: \"100%\",\r\n            display: \"inline-flex\",\r\n          },\r\n        },\r\n      },\r\n    })\r\n  );\r\n\r\nexport default makeTheme;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    &::-webkit-scrollbar {\r\n      width: 5px;\r\n      &-track {\r\n        background: rgba(0,0,0,.1);\r\n        border-radius: 5px;\r\n      }\r\n      &-thumb {\r\n        background: rgba(0,0,0,.2);\r\n        border-radius: 5px;\r\n      }\r\n    }\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n  body {\r\n    overflow-x: hidden;\r\n    min-width: 320px; \r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export enum ActionTypes {\r\n  SET_ALERT = \"SET_ALERT\",\r\n}\r\n\r\nexport type SetAlertPayloadType = {\r\n  show: boolean;\r\n  text?: string;\r\n};\r\n\r\ntype SetAlert = {\r\n  type: ActionTypes.SET_ALERT;\r\n  payload: SetAlertPayloadType;\r\n};\r\n\r\nexport type AlertActions = SetAlert;\r\n","import { parse } from \"query-string\";\r\nimport { useMemo } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst useQueryParams = <\r\n  T extends { [key: string]: number | string | string[] | undefined } = any\r\n>() => {\r\n  const { search } = useLocation();\r\n  const params = useMemo(() => parse(search, { parseNumbers: true }), [search]);\r\n  return params as T;\r\n};\r\n\r\nexport default useQueryParams;\r\n","import React from \"react\";\r\nimport Container, { ContainerProps } from \"@material-ui/core/Container\";\r\nimport Grid, { GridProps } from \"@material-ui/core/Grid\";\r\n\r\nexport const gutterSpacing = 3;\r\n\r\nconst Gutter = <C extends React.ElementType>({\r\n  children,\r\n  maxWidth = \"lg\",\r\n  justify,\r\n  direction,\r\n  wrap,\r\n  alignItems,\r\n  ...props\r\n}: Omit<GridProps<C, { component?: C }>, \"object\"> &\r\n  Pick<ContainerProps, \"maxWidth\">) => (\r\n  <Grid {...props} item container justify=\"center\" xs={12}>\r\n    <Grid\r\n      item\r\n      container\r\n      spacing={gutterSpacing}\r\n      component={Container}\r\n      disableGutters\r\n      maxWidth={maxWidth}\r\n      justify={justify}\r\n      direction={direction}\r\n      wrap={wrap}\r\n      alignItems={alignItems}\r\n    >\r\n      {children}\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default Gutter;\r\n","import { useState, useEffect, useRef, Dispatch, SetStateAction } from \"react\";\r\n\r\nconst useDebounce = <T>(\r\n  value: T,\r\n  delay: number\r\n): [\r\n  debouncedValue: T,\r\n  prevValue: T,\r\n  resetDebouncedValue: Dispatch<SetStateAction<T>>\r\n] => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  const prevValue = useRef(debouncedValue);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      if (debouncedValue !== value) {\r\n        prevValue.current = debouncedValue;\r\n        setDebouncedValue(value);\r\n      }\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return [debouncedValue, prevValue.current, setDebouncedValue];\r\n};\r\n\r\nexport default useDebounce;\r\n","import React, {\r\n  ChangeEvent,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n  VFC,\r\n} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport useQueryParams from \"utils/useQueryParams\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { parse, stringify } from \"query-string\";\r\nimport useDebounce from \"utils/useDebounce\";\r\n\r\ntype Props = {\r\n  label: string;\r\n  queryKey: string;\r\n};\r\n\r\nconst FilterInput: VFC<Props> = ({ label, queryKey }) => {\r\n  const queryParams = useQueryParams<Partial<Record<string, string>>>();\r\n\r\n  const { replace, push, listen } = useHistory();\r\n\r\n  const [filter, setFilter] = useState(String(queryParams[queryKey] ?? \"\"));\r\n\r\n  const handleFilter = useCallback(\r\n    (e: ChangeEvent<HTMLInputElement>) => setFilter(e.target.value),\r\n    []\r\n  );\r\n\r\n  const [debouncedFilter, prevFilter, resetDebouncedFilter] = useDebounce(\r\n    filter,\r\n    300\r\n  );\r\n\r\n  useEffect(() => {\r\n    const action = debouncedFilter.startsWith(prevFilter) ? replace : push;\r\n\r\n    action({\r\n      search: stringify({\r\n        ...queryParams,\r\n        [queryKey]: debouncedFilter || undefined,\r\n      }),\r\n    });\r\n  }, [debouncedFilter, queryKey]);\r\n\r\n  useEffect(\r\n    () =>\r\n      listen((location, action) => {\r\n        if (action === \"POP\") {\r\n          const value = (parse(location.search)[queryKey] as string) ?? \"\";\r\n\r\n          resetDebouncedFilter(value);\r\n          setFilter(value);\r\n        }\r\n      }),\r\n    [queryKey]\r\n  );\r\n\r\n  return (\r\n    <TextField fullWidth onChange={handleFilter} label={label} value={filter} />\r\n  );\r\n};\r\n\r\nexport default FilterInput;\r\n","import { FetchRV } from \"types\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport { BASE_URL } from \"./constant\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\nconst fetcher = {\r\n  async get<T = {}>(url: string): Promise<FetchRV<T>> {\r\n    try {\r\n      return (\r\n        await axiosInstance.get(url, {\r\n          headers: {\r\n            Accept: \"application/vnd.github.v3+json\",\r\n          },\r\n        })\r\n      ).data;\r\n    } catch (error) {\r\n      const { data, status } = error.response as AxiosResponse;\r\n      return { ...data, status };\r\n    }\r\n  },\r\n};\r\n\r\nexport default fetcher;\r\n","export const BASE_URL = \"https://api.github.com\";\r\n","import { ThunkResult } from \"types\";\r\nimport { ActionTypes, SetAlertPayloadType } from \"./type\";\r\nimport { FetcherFailError } from \"types/error\";\r\n\r\nexport const setAlert = (\r\n  show: boolean,\r\n  data?: FetcherFailError\r\n): ThunkResult => (dispatch) => {\r\n  let payload: SetAlertPayloadType;\r\n  if (show && data) {\r\n    const { status, message } = data;\r\n\r\n    payload = {\r\n      show,\r\n      text:\r\n        message || status === 401\r\n          ? \"Unauthorized\"\r\n          : status === 403\r\n          ? \"Access denied\"\r\n          : status === 404\r\n          ? \"Not Found\"\r\n          : status === 500\r\n          ? \"Internal Server Error\"\r\n          : \"Something going wrong\",\r\n    };\r\n  } else {\r\n    payload = { show };\r\n  }\r\n\r\n  dispatch({\r\n    type: ActionTypes.SET_ALERT,\r\n    payload,\r\n  });\r\n};\r\n","enum APIPaths {\r\n  USER_SEARCH = \"search/users\",\r\n  USERS = \"users\",\r\n  USER_REPOSITORIES_SEARCH = \"search/repositories\",\r\n}\r\n\r\nexport default APIPaths;\r\n","import React, { VFC } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner: VFC = () => (\r\n  <Grid item container justify=\"center\">\r\n    <CircularProgress />\r\n  </Grid>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"redux/alert/actions\";\r\nimport Spinner from \"components/common/Spinner\";\r\nimport { FetchRV, ThunkDispatcher } from \"types\";\r\nimport { FetcherFailError } from \"types/error\";\r\n\r\ntype DataObj<D extends {}> = {\r\n  data: D;\r\n};\r\n\r\ntype Props<D extends {}> = Partial<Record<string, unknown>> & DataObj<D>;\r\n\r\nconst Loader = <D extends {}, P extends Props<D>>({\r\n  component,\r\n  data,\r\n  ...props\r\n}: {\r\n  component: FC<P>;\r\n} & Omit<P, \"data\"> &\r\n  Partial<DataObj<FetchRV<P[\"data\"]>>>) => {\r\n  const dispatch = useDispatch<ThunkDispatcher>();\r\n\r\n  useEffect(() => {\r\n    if ((data as FetcherFailError | undefined)?.status)\r\n      dispatch(setAlert(true, data as FetcherFailError));\r\n  }, [data, dispatch]);\r\n\r\n  if (!data) return <Spinner />;\r\n\r\n  if ((data as FetcherFailError).status) return null;\r\n\r\n  const Component = component as FC<Props<D>>;\r\n\r\n  return <Component data={data as D} {...props} />;\r\n};\r\n\r\nexport default Loader;\r\n","import React, { VFC } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { HomeData } from \"types/home\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"styled-components/macro\";\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype Props = {\r\n  data: HomeData;\r\n};\r\n\r\nconst Users: VFC<Props> = ({ data }) => {\r\n  return (\r\n    <>\r\n      {data.items.map((item, index) => (\r\n        <Grid item key={index} xs={12}>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n            <Grid item>\r\n              <MuiLink\r\n                component={Link}\r\n                to={`/${item.login}`}\r\n                color=\"inherit\"\r\n                underline=\"none\"\r\n              >\r\n                <Avatar\r\n                  src={item.avatar_url}\r\n                  css={`\r\n                    height: 75px;\r\n                    width: 75px;\r\n                  `}\r\n                >\r\n                  {item.login}\r\n                </Avatar>\r\n              </MuiLink>\r\n            </Grid>\r\n            <Grid item>\r\n              <MuiLink\r\n                component={Link}\r\n                to={`/${item.login}`}\r\n                color=\"inherit\"\r\n                underline=\"always\"\r\n              >\r\n                {item.login}\r\n              </MuiLink>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","export enum ActionTypes {\r\n  SET_DARK = \"SET_DARK\",\r\n  SET_OFFSET = \"SET_OFFSET\",\r\n}\r\n\r\ntype SetDark = {\r\n  type: ActionTypes.SET_DARK;\r\n  payload: boolean;\r\n};\r\n\r\ntype SetOffset = {\r\n  type: ActionTypes.SET_OFFSET;\r\n  payload: number;\r\n};\r\n\r\nexport type CommonActions = SetDark | SetOffset;\r\n","import React, { useEffect, useRef, VFC } from \"react\";\r\nimport { FetchRV } from \"types\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport { useSWRInfinite } from \"swr\";\r\nimport { State } from \"types\";\r\nimport { createSelector } from \"reselect\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { stringifyUrl } from \"query-string\";\r\nimport { HomeData, SearchQueryType } from \"types/home\";\r\nimport Loader from \"containers/common/Loader\";\r\nimport Users from \"containers/home/Users\";\r\nimport APIPaths from \"api/apiAddresses\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport Spinner from \"components/common/Spinner\";\r\n\r\nconst selectData = createSelector(\r\n  (state: State) => state.common.offset,\r\n  (offset) => ({ offset })\r\n);\r\n\r\ntype Props = SearchQueryType;\r\n\r\nconst UsersContainer: VFC<Props> = ({ search }) => {\r\n  const { offset } = useSelector(selectData);\r\n\r\n  const prevData = useRef<FetchRV<HomeData>[]>();\r\n\r\n  const { data, size, setSize } = useSWRInfinite<FetchRV<HomeData>>(\r\n    (page) =>\r\n      stringifyUrl(\r\n        {\r\n          url: APIPaths.USER_SEARCH,\r\n          query: { q: search, page, per_page: offset },\r\n        },\r\n        { skipEmptyString: true }\r\n      ),\r\n    fetcher.get\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) prevData.current = data;\r\n  }, [data]);\r\n\r\n  const users = data || prevData.current;\r\n\r\n  return (\r\n    <>\r\n      {users?.map((item, index) => (\r\n        <Loader key={index} component={Users} data={item} />\r\n      ))}\r\n      {users && users.length < size && <Spinner />}\r\n      {data && (\r\n        <Grid item container justify=\"center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={\r\n              data.length !== size ||\r\n              data.length * offset > (data[0].total_count ?? 0)\r\n            }\r\n            onClick={() => setSize((size) => size + 1)}\r\n          >\r\n            Load more\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UsersContainer;\r\n","import React, { memo, VFC } from \"react\";\r\nimport useQueryParams from \"utils/useQueryParams\";\r\nimport { SearchQueryType } from \"types/home\";\r\nimport Gutter from \"components/common/Gutter\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FilterInput from \"containers/common/FilterInput\";\r\nimport UsersContainer from \"containers/home/UsersContainer\";\r\n\r\nconst Home: VFC = memo(() => {\r\n  const { search } = useQueryParams<SearchQueryType>();\r\n\r\n  return (\r\n    <Gutter>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <FilterInput queryKey=\"search\" label=\"Search\" />\r\n        </Grid>\r\n        {search && <UsersContainer search={search} />}\r\n      </Grid>\r\n    </Gutter>\r\n  );\r\n});\r\n\r\nexport default Home;\r\n","import React, { VFC } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { UserT } from \"types/user\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"styled-components/macro\";\r\nimport { Link } from \"@material-ui/core\";\r\n\r\ntype Props = { data: UserT };\r\n\r\nconst UserInfo: VFC<Props> = ({ data }) => (\r\n  <>\r\n    <Grid item container spacing={6} alignItems=\"center\">\r\n      <Grid item>\r\n        <Avatar\r\n          src={data.avatar_url}\r\n          css={`\r\n            height: 200px;\r\n            width: 200px;\r\n          `}\r\n        >\r\n          {data.login}\r\n        </Avatar>\r\n      </Grid>\r\n      <Grid item>\r\n        <Grid container spacing={3} direction=\"column\">\r\n          <Grid item>\r\n            <Typography>UserName: {data.login}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography>\r\n              Email:{\" \"}\r\n              {data.email && (\r\n                <Link\r\n                  underline=\"always\"\r\n                  color=\"inherit\"\r\n                  href={`mailto:${data.email}`}\r\n                >\r\n                  {data.email}\r\n                </Link>\r\n              )}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography>Location: {data.location}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography>\r\n              Join date: {new Date(data.created_at).toDateString()}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography>{data.followers} Followers</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography>Following {data.following}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    {data.bio && (\r\n      <Grid item xs={12}>\r\n        <Typography>{data.bio}</Typography>\r\n      </Grid>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default UserInfo;\r\n","import React, { VFC } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"styled-components/macro\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { RepoData } from \"types/repo\";\r\nimport AccountTreeIcon from \"@material-ui/icons/AccountTree\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\ntype Props = {\r\n  data: RepoData;\r\n};\r\n\r\nconst Repos: VFC<Props> = ({ data }) => {\r\n  return (\r\n    <>\r\n      {data.items.map((item, index) => (\r\n        <Grid item key={index} xs={12}>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n            alignItems=\"center\"\r\n            justify=\"space-between\"\r\n          >\r\n            <Grid item>\r\n              <Link\r\n                href={item.html_url}\r\n                color=\"inherit\"\r\n                underline=\"always\"\r\n                target=\"_blank\"\r\n              >\r\n                {item.name}\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container spacing={2} justify=\"flex-end\">\r\n                <Grid\r\n                  item\r\n                  container\r\n                  alignItems=\"center\"\r\n                  spacing={2}\r\n                  justify=\"flex-end\"\r\n                >\r\n                  <Grid item>{item.forks}</Grid>\r\n                  <Tooltip title=\"Forks\">\r\n                    <AccountTreeIcon />\r\n                  </Tooltip>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  alignItems=\"center\"\r\n                  spacing={2}\r\n                  justify=\"flex-end\"\r\n                >\r\n                  <Grid item>{item.stargazers_count}</Grid>\r\n                  <Tooltip title=\"Stars\">\r\n                    <StarIcon />\r\n                  </Tooltip>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Repos;\r\n","import React, { useEffect, useRef, VFC } from \"react\";\r\nimport { FetchRV } from \"types\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport { useSWRInfinite } from \"swr\";\r\nimport { State } from \"types\";\r\nimport { createSelector } from \"reselect\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { stringifyUrl } from \"query-string\";\r\nimport { SearchQueryType } from \"types/home\";\r\nimport Loader from \"containers/common/Loader\";\r\nimport APIPaths from \"api/apiAddresses\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport Spinner from \"components/common/Spinner\";\r\nimport useQueryParams from \"utils/useQueryParams\";\r\nimport { RepoData } from \"types/repo\";\r\nimport Repos from \"./Repos\";\r\n\r\nconst selectData = createSelector(\r\n  (state: State) => state.common.offset,\r\n  (offset) => ({ offset })\r\n);\r\n\r\ntype Props = { username: string };\r\n\r\nconst ReposContainer: VFC<Props> = ({ username }) => {\r\n  const { offset } = useSelector(selectData);\r\n\r\n  const prevData = useRef<FetchRV<RepoData>[]>();\r\n\r\n  const { search } = useQueryParams<SearchQueryType>();\r\n\r\n  const { data, size, setSize } = useSWRInfinite<FetchRV<RepoData>>(\r\n    (page) =>\r\n      stringifyUrl(\r\n        {\r\n          url: APIPaths.USER_REPOSITORIES_SEARCH,\r\n          query: {\r\n            q: `${search ? `${search} in:name ` : \"\"}user:${username}`,\r\n            page,\r\n            per_page: offset,\r\n          },\r\n        },\r\n        { skipEmptyString: true }\r\n      ),\r\n    fetcher.get\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) prevData.current = data;\r\n  }, [data]);\r\n\r\n  const repos = data || prevData.current;\r\n\r\n  return (\r\n    <>\r\n      {repos?.map((item, index) => (\r\n        <Loader key={index} component={Repos} data={item} />\r\n      ))}\r\n      {repos && repos.length < size && <Spinner />}\r\n      {data && (\r\n        <Grid item container justify=\"center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={\r\n              data.length !== size ||\r\n              data.length * offset > (data[0].total_count ?? 0)\r\n            }\r\n            onClick={() => setSize((size) => size + 1)}\r\n          >\r\n            Load more\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReposContainer;\r\n","import React, { VFC } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FilterInput from \"containers/common/FilterInput\";\r\nimport { UserT } from \"types/user\";\r\nimport \"styled-components/macro\";\r\nimport UserInfo from \"components/user/UserInfo\";\r\nimport ReposContainer from \"./ReposContainer\";\r\n\r\ntype Props = { data: UserT };\r\n\r\nconst UserContainer: VFC<Props> = ({ data }) => {\r\n  return (\r\n    <>\r\n      <UserInfo data={data} />\r\n      <Grid item xs={12}>\r\n        <FilterInput queryKey=\"search\" label=\"Search\" />\r\n      </Grid>\r\n      <ReposContainer username={data.login} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserContainer;\r\n","import React, { memo, VFC } from \"react\";\r\nimport Gutter from \"components/common/Gutter\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport useSWR from \"swr\";\r\nimport { FetchRV } from \"types\";\r\nimport APIPaths from \"api/apiAddresses\";\r\nimport { UserT } from \"types/user\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport Loader from \"containers/common/Loader\";\r\nimport UserContainer from \"containers/user/UserContainer\";\r\n\r\nconst User: VFC<RouteComponentProps<{ user: string }>> = memo(\r\n  ({\r\n    match: {\r\n      params: { user },\r\n    },\r\n  }) => {\r\n    const { data } = useSWR<FetchRV<UserT>>(\r\n      `${APIPaths.USERS}/${user}`,\r\n      fetcher.get\r\n    );\r\n\r\n    return (\r\n      <Gutter>\r\n        <Grid container spacing={3}>\r\n          <Loader component={UserContainer} data={data} />\r\n        </Grid>\r\n      </Gutter>\r\n    );\r\n  }\r\n);\r\n\r\nexport default User;\r\n","import React, { VFC } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"pages/Home\";\r\nimport User from \"pages/User\";\r\n\r\nconst AppRouter: VFC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/:user\" component={User} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { memo, useCallback, VFC } from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { State, ThunkDispatcher } from \"types\";\r\nimport { createSelector } from \"reselect\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"redux/alert/actions\";\r\n\r\nconst selectData = createSelector(\r\n  (state: State) => state.alert.show,\r\n  (state: State) => state.alert.text,\r\n  (show, text) => ({ show, text })\r\n);\r\n\r\nconst Alert: VFC = memo(() => {\r\n  const { show, text } = useSelector(selectData);\r\n\r\n  const dispatch = useDispatch<ThunkDispatcher>();\r\n\r\n  const handleClose = useCallback(() => {\r\n    dispatch(setAlert(false));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Snackbar open={show} autoHideDuration={6000} onClose={handleClose}>\r\n      <MuiAlert\r\n        elevation={6}\r\n        variant=\"filled\"\r\n        onClose={handleClose}\r\n        severity={\"error\"}\r\n      >\r\n        {text}\r\n      </MuiAlert>\r\n    </Snackbar>\r\n  );\r\n});\r\n\r\nexport default Alert;\r\n","import { ThunkResult } from \"types\";\r\nimport { ActionTypes } from \"./type\";\r\n\r\nexport const setDark = (isDark: boolean): ThunkResult => (dispatch) => {\r\n  dispatch({\r\n    type: ActionTypes.SET_DARK,\r\n    payload: isDark,\r\n  });\r\n};\r\n\r\nexport const setOffset = (offset: number): ThunkResult => (dispatch) => {\r\n  dispatch({\r\n    type: ActionTypes.SET_OFFSET,\r\n    payload: offset,\r\n  });\r\n};\r\n","import Switch from \"@material-ui/core/Switch\";\r\nimport React, { VFC } from \"react\";\r\nimport { createSelector } from \"reselect\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { State, ThunkDispatcher } from \"types\";\r\nimport { setDark } from \"redux/common/actions\";\r\n\r\nconst selectData = createSelector(\r\n  (state: State) => state.common.dark,\r\n  (dark) => ({ dark })\r\n);\r\n\r\nconst ThemeSwitcher: VFC = () => {\r\n  const dispatch = useDispatch<ThunkDispatcher>();\r\n  const { dark } = useSelector(selectData);\r\n\r\n  const handleTheme = () => {\r\n    dispatch(setDark(!dark));\r\n  };\r\n\r\n  return <Switch checked={dark} onChange={handleTheme} color=\"default\" />;\r\n};\r\n\r\nexport default ThemeSwitcher;\r\n","import React, { VFC } from \"react\";\r\nimport { createSelector } from \"reselect\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { State, ThunkDispatcher } from \"types\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { setOffset } from \"redux/common/actions\";\r\nimport { SelectInputProps } from \"@material-ui/core/Select/SelectInput\";\r\n\r\nconst selectData = createSelector(\r\n  (state: State) => state.common.offset,\r\n  (offset) => ({ offset })\r\n);\r\n\r\nconst offsetVariants = [20, 25, 50, 100];\r\n\r\nconst OffsetSelect: VFC = () => {\r\n  const dispatch = useDispatch<ThunkDispatcher>();\r\n\r\n  const { offset } = useSelector(selectData);\r\n\r\n  const handleCount: SelectInputProps[\"onChange\"] = (e) => {\r\n    const count = e.target.value as number;\r\n\r\n    if (offset !== count) dispatch(setOffset(count));\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\">\r\n      <Select value={offset} onChange={handleCount} label=\"Offset\">\r\n        {offsetVariants.map((value, index) => (\r\n          <MenuItem value={value} key={index}>\r\n            {value}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default OffsetSelect;\r\n","import React, { useState, useCallback, VFC } from \"react\";\r\nimport \"styled-components/macro\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\nimport TuneIcon from \"@material-ui/icons/Tune\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ThemeSwitcher from \"./ThemeSwitcher\";\r\nimport OffsetSelect from \"./OffsetSelect\";\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport { ThemeProps } from \"types\";\r\n\r\nconst SettingsDial: VFC = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = useCallback(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  return (\r\n    <SpeedDial\r\n      css={`\r\n        display: inline-block;\r\n        position: relative;\r\n        .MuiSpeedDial {\r\n          &-fab {\r\n            background-color: transparent !important;\r\n            color: inherit;\r\n            width: auto;\r\n            height: auto;\r\n            box-shadow: none;\r\n            z-index: 2;\r\n            .MuiIconButton-root {\r\n              color: inherit;\r\n            }\r\n          }\r\n          &-actions {\r\n            position: absolute;\r\n            z-index: 1;\r\n            left: 0;\r\n            right: 0;\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n            .MuiSpeedDialAction-fab {\r\n              margin: auto;\r\n              width: auto;\r\n              height: auto;\r\n              transform: translateX(-50%);\r\n              position: relative;\r\n              left: 50%;\r\n              border-radius: ${({ theme }: ThemeProps) =>\r\n                theme.shape.borderRadius}px;\r\n              &:not(:last-child) {\r\n                margin-bottom: ${({ theme }: ThemeProps) => theme.spacing(1)}px;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      `}\r\n      ariaLabel=\"settings\"\r\n      icon={\r\n        <IconButton component=\"span\">\r\n          <TuneIcon />\r\n        </IconButton>\r\n      }\r\n      onClose={handleClose}\r\n      onOpen={handleOpen}\r\n      open={open}\r\n      direction=\"down\"\r\n    >\r\n      <SpeedDialAction icon={<ThemeSwitcher />} tooltipTitle=\"Switch theme\" />\r\n      <SpeedDialAction icon={<OffsetSelect />} tooltipTitle=\"Items per page\" />\r\n    </SpeedDial>\r\n  );\r\n};\r\n\r\nexport default SettingsDial;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React, { memo, VFC } from \"react\";\r\nimport \"styled-components/macro\";\r\nimport SettingsDial from \"containers/header/SettingsDial\";\r\nimport { ThemeProps } from \"types\";\r\nimport { gutterSpacing } from \"./Gutter\";\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header: VFC = memo(() => (\r\n  <AppBar\r\n    position=\"static\"\r\n    color=\"default\"\r\n    css={`\r\n      margin-bottom: ${({ theme }: ThemeProps) =>\r\n        theme.spacing(gutterSpacing) / 2}px;\r\n    `}\r\n  >\r\n    <Grid\r\n      container\r\n      justify=\"space-between\"\r\n      alignItems=\"center\"\r\n      css={`\r\n        max-width: ${({ theme }: ThemeProps) =>\r\n          theme.breakpoints.width(\"lg\")}px;\r\n      `}\r\n    >\r\n      <Grid item>\r\n        <MuiLink\r\n          component={Link}\r\n          to=\"/\"\r\n          color=\"inherit\"\r\n          underline=\"none\"\r\n          variant=\"h5\"\r\n        >\r\n          GitHub Searcher\r\n        </MuiLink>\r\n      </Grid>\r\n      <Grid item>\r\n        <SettingsDial />\r\n      </Grid>\r\n    </Grid>\r\n  </AppBar>\r\n));\r\n\r\nexport default Header;\r\n","import React, { FC } from \"react\";\r\nimport \"styled-components/macro\";\r\nimport Alert from \"containers/common/Alert\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Header from \"./Header\";\r\n\r\nconst Layout: FC = ({ children }) => (\r\n  <>\r\n    <Grid\r\n      container\r\n      spacing={3}\r\n      css={`\r\n        margin: 0;\r\n        width: 100%;\r\n        min-height: 100vh;\r\n        height: 100%;\r\n      `}\r\n      direction=\"column\"\r\n    >\r\n      <Header />\r\n      {children}\r\n    </Grid>\r\n    <Alert />\r\n  </>\r\n);\r\n\r\nexport default Layout;\r\n","import React, { useMemo, VFC } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport {\r\n  StylesProvider,\r\n  ThemeProvider as MuiThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { createSelector } from \"reselect\";\r\nimport { State } from \"types\";\r\nimport makeTheme from \"utils/makeTheme\";\r\nimport GlobalStyle from \"components/common/GlobalStyle\";\r\nimport AppRouter from \"router/AppRouter\";\r\nimport Layout from \"components/common/Layout\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nconst selectData = createSelector(\r\n  (state: State) => state.common.dark,\r\n  (dark) => ({ dark })\r\n);\r\n\r\nconst App: VFC = () => {\r\n  const { dark } = useSelector(selectData);\r\n\r\n  const theme = useMemo(() => makeTheme(dark), [dark]);\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <MuiThemeProvider theme={theme}>\r\n        <ThemeProvider theme={theme}>\r\n          <GlobalStyle />\r\n          <CssBaseline />\r\n          <Layout>\r\n            <AppRouter />\r\n          </Layout>\r\n        </ThemeProvider>\r\n      </MuiThemeProvider>\r\n    </StylesProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ActionTypes, CommonActions } from \"./type\";\r\n\r\ntype State = {\r\n  dark: boolean;\r\n  offset: number;\r\n};\r\n\r\nconst initialState: State = {\r\n  dark: true,\r\n  offset: 20,\r\n};\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: CommonActions\r\n): State {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_DARK:\r\n      return {\r\n        ...state,\r\n        dark: action.payload,\r\n      };\r\n    case ActionTypes.SET_OFFSET:\r\n      return {\r\n        ...state,\r\n        offset: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ActionTypes, AlertActions } from \"./type\";\r\n\r\ntype State = {\r\n  show: boolean;\r\n  text: string | number;\r\n};\r\n\r\nconst initialState: State = {\r\n  show: false,\r\n  text: \"\",\r\n};\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: AlertActions\r\n): State {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_ALERT:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { persistReducer, PersistConfig } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport commonReducer from \"./common/reducer\";\r\nimport alertReducer from \"./alert/reducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst commonConfig: PersistConfig<any> = {\r\n  key: \"common\",\r\n  storage: storage,\r\n  whitelist: [\"dark\", \"token\", \"offset\"],\r\n};\r\n\r\nexport const combinedReducer = combineReducers({\r\n  common: persistReducer(commonConfig, commonReducer),\r\n  alert: alertReducer,\r\n});\r\n","import { createStore, applyMiddleware, Middleware, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { combinedReducer } from \"./reducer\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nconst bindMiddleware = (middleware: Middleware) => {\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    const { composeWithDevTools } = require(\"redux-devtools-extension\");\r\n    return composeWithDevTools(applyMiddleware(middleware));\r\n  }\r\n  return compose(applyMiddleware(middleware));\r\n};\r\n\r\nexport const store = createStore(\r\n  combinedReducer,\r\n  bindMiddleware(thunkMiddleware)\r\n);\r\n\r\nexport const persistor = persistStore(store as any);\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./containers/common/App\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./fonts/font.css\";\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}